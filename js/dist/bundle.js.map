{"version":3,"sources":["../src/continuous.js","../src/main.js","../src/owner.js","../src/total.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["$(document).ready(() => {\n  let CONTINUOUS = (() => {\n    let entries = {},\n      demands = {},\n      wrongAnswers = new Set(),\n      $contForm = $('.continuous'),\n      answer,\n      $congrats = $('#congrats4');\n\n\n    function calculator () {\n      entries.other = parseInt($contForm.find('#owner-sec-other-loads')\n        .val(), 10);\n      entries.heat = parseInt($contForm.find('#owner-sec-heating').val(), 10);\n      entries.parking = parseInt($contForm.find('#owner-sec-parking').\n        val(), 10);\n      entries.userAnswer = parseInt($('#continuous-answer')\n              .find('#continuous-user-answer').val(), 10);\n      return (entries.other + entries.heat + entries.parking) * 0.75;\n    }\n\n    function displaySuccess (success, fail, again, gaveup) {\n      if (success) {\n        $congrats.removeClass('alert-danger');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-success');\n        $congrats.html('<strong>Success</strong>');\n      }\n      if (fail) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-danger');\n        $congrats.html('<strong>Better luck next time!</strong>');\n      }\n      if (again) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-danger');\n        $congrats.addClass('alert alert-info');\n        $congrats.html('<strong>Just keep trying!</strong>');\n      }\n    }\n\n    function checkAnswer () {\n      answer = calculator();\n      console.log(answer);\n      let attempt = parseInt(entries.userAnswer, 10);\n      console.log('entries.userAnswer '+entries.userAnswer);\n      // check for right answer then do css magic!!\n      if (parseInt(answer, 10) === attempt) {\n        displaySuccess(true, false, false);\n        wrongAnswers = new Set();\n        return true;\n      }\n      displaySuccess(false, true, false);\n      console.log(attempt);\n      wrongAnswers.add(attempt);\n      console.log(wrongAnswers);\n    }\n\n    function giveAnswer () {\n      // display answer\n      let $displayNode = $('#continuous-answer')\n        .find('#display-continuous-answer');\n      if (wrongAnswers.size < 3) {  // tried at least 3 different times\n        $displayNode.val('You need to try an answer first!');\n        displaySuccess(false, false, true);\n        return false;\n      }\n      displaySuccess(false, true, false);\n      $displayNode.val(answer);\n      wrongAnswers = new Set();\n      // add css class to the element to show a failure\n    }\n\n    $('#continuous-check').click(checkAnswer);\n    $('#con-answer').click(giveAnswer);\n  }());\n});","/**\n\n  TODO:\n  - Make button shake like electrical current\n  - do something better than an alert for right answer.\n  - put message about gas range vs electric range and not to worry\n\n */\n\n$(document).ready(() => {\n  let SUITE = (() => {\n/**\n * initialize main variables\n * demands is an object to store the values after running through the CEC Rules\n * entries is an object to store the input value from the user\n * answer is well the answer!!\n */\n      let demands = {},\n        entries = {},\n        $unitForm = $('#unit_demands'),\n        wrongAnswers = new Set(),\n        answer,\n      // get buttons\n        $check = $('#check'),\n        $answer = $('#answer'),\n        $addLoad = $('#add-load'),\n        $congrats = $('#congrats1');\n\n\n\n/**\n * Finds all the extra-load classes from the DOM including newly created ones.\n * @return {list} Extra load values.\n */\n      function getExtraLoads() {\n      let temArr = [];\n      // if the function below is written in arrow form then this get complied as\n      // it belonged to the getExtraLoads function instead.\n      $('.extra-loads-wrapper .extra-load').each(function () {\n        temArr.push($(this).val());\n      });\n      return temArr;\n    }\n\n\n/**\n * Will insert a new Extra Load input field to the bottom of the others.\n * Returns a function so that I can store the extra load number for the label\n * and id matching!!\n */\n      function addExtraLoad() {\n        let ex = 2;\n        return function () {\n          ex++;\n          $('.extra-loads-wrapper').append('<div class=\"form-group\"><label ' +\n          `for=\"extra${ex}\" class=\"col-sm-12 col-md-2\">` +\n          `Extra Load W</label><div ` +\n          `class=\"col-sm-12 col-md-10\"><input type=\"text\" class=\"form-control` +\n          ` extra-load\" id=\"extra${ex}\" placeholder=\"1800\"></div></div>`);\n        };\n      }\n\n/**\n * Given an area will calculate rule 8-202(1)(a)(i)(ii)(iii)\n * @param  {string} area From the input field #area\n * @return {number}      demand based off the area.\n */\n      function calArea(area) {\n        area = parseInt(area, 10);\n        if (area <= 45) { return 3500; }\n        if (area > 45 && area <= 90) { return 5000; }\n        let multiplier = Math.ceil((area - 90) / 90);\n        return multiplier > 1 ? 5000 + (1000 * multiplier) : 6000;\n      }\n\n/**\n * Given a range in watts will calculate rule 8-202(1)(v)\n * Because this will always return 6000 W even if the demand is 0 which is the\n * case for a gas range. Due to 8-202(1)(a)(vi)(B) in the event of a gas range\n * there is still a need to add 6000 W for future use!\n * @param  {string} range From the input field #range\n * @return {number}       demand based off the range.\n */\n      function calRange(range) {\n        range = parseInt(range, 10);\n        return range <= 12000 ? 6000 : 6000 + ((range - 12000) * 0.4);\n      }\n\n/**\n * Takes in an array of extras, will map over that to produce an array of only\n * the \"greater than 1500\" demands multiplied by 25% and then added together\n * with reduce\n * CEC Rule 8-202(1)(a)(vi)\n * @param  {array} extras only really care about demands above 1500W\n * @return {number}        total demand from the extra loads\n */\n      function calExtras(extras) {\n        return extras.map((extra) => {\n          extra = parseInt(extra, 10);\n          return extra > 1500 ? extra * 0.25 : 0;\n        }).reduce((prev, curr) => prev + curr);\n      }\n\n/**\n * Given the heat and A/C demands will determine which to choose based off of\n * CEC Rule 8-202(1)(a)(iv)\n * @param  {string} heat the demands of the heat\n * @param  {string} ac   the demand of the a/c\n * @return {number}      total demand\n */\n      function calHeatAC(heat, ac) {\n        heat = parseInt(heat, 10);\n        ac = parseInt(ac, 10);\n        if (ac > heat) { return ac; }\n        if (heat <= 10000) { return heat; }\n        return parseInt(((heat - 10000) * 0.75) + 10000, 10);\n      }\n\n      function calMinWireAmpacity(wattage, voltage, phase) {\n        wattage = parseInt(wattage, 10);\n        voltage = parseInt(voltage, 10);\n        phase = parseInt(phase, 10);\n        return phase === 1 ? (wattage / voltage).toFixed(2) : (wattage /\n            (Math.sqrt(3) * voltage)).toFixed(2);\n      }\n\n/**\n * Finds all the demand values from the DOM elements and assigns to an entries\n * object. Fill the demands object with the calculated values using functions\n * that represent the CEC Rules\n * @return {number} the ampacity to 2 decimal places.\n */\n      function calculator() {\n        // all values are string from text fields\n        entries = {\n          area: $unitForm.find('#area').val(),\n          range: $unitForm.find('#range').val(),\n          heat: $unitForm.find('#heat').val(),\n          extras: getExtraLoads(),\n          ac: $unitForm.find('#a-c').val(),\n          suiteVoltage: $unitForm.find('#suite-voltage').val(),\n          suitePhase: $unitForm.find('#suite-phase').val(),\n          userAmswer: $('#suite_answer').find('#user-answer').val(),\n        };\n\n        // add each total to the demands array\n        demands.area = calArea(entries.area);\n        demands.range = calRange(entries.range);\n        demands.extras = calExtras(entries.extras);\n        demands.subTotal = demands.area + demands.range + demands.extras;\n        demands.heatAC = calHeatAC(entries.heat, entries.ac);\n        demands.suiteTotal = parseInt(demands.heatAC, 10) +\n          parseInt(demands.subTotal, 10);\n        //console.log(\"total wattage  \" + demands.suiteTotal);\n        //console.log(\"area: \" + demands.area);\n        //console.log(\"range \" + demands.range);\n        //console.log(\"extra \" + demands.extras);\n        //console.log(\"sub \" + demands.subTotal);\n        //console.log(demands.suiteTotal);\n        //console.log(\"heatAC \" + demands.heatAC);\n        // find answer!!\n        return calMinWireAmpacity(demands.suiteTotal, entries.suiteVoltage,\n          entries.suitePhase);\n      }\n\n      function displaySuccess (success, fail, again, gaveup) {\n        if (success) {\n          $congrats.removeClass('alert-danger');\n          $congrats.removeClass('alert-info');\n          $congrats.addClass('alert alert-success');\n          $congrats.html('<strong>Success</strong>');\n        }\n        if (fail) {\n          $congrats.removeClass('alert-success');\n          $congrats.removeClass('alert-info');\n          $congrats.addClass('alert alert-danger');\n          $congrats.html('<strong>Better luck next time!</strong>');\n        }\n        if (again) {\n          $congrats.removeClass('alert-success');\n          $congrats.removeClass('alert-danger');\n          $congrats.addClass('alert alert-info');\n          $congrats.html('<strong>Just keep trying!</strong>');\n        }\n      }\n/**\n * Will call the calculator() function which makes the entries object and fills\n * the demands object with the calculated demands\n * @return {null}\n */\n      function checkAnswer() {\n        answer = calculator();\n        let attempt = parseInt(entries.userAmswer, 10);\n        console.log(answer);\n        // check for right answer then do css magic!!\n        if (parseInt(answer, 10) === attempt) {\n          // add css class to style as well\n          displaySuccess(true, false, false);\n          wrongAnswers = new Set();\n          return true;\n        }\n        displaySuccess(false, true, false);\n        wrongAnswers.add(attempt);\n        console.log(wrongAnswers);\n        console.log(wrongAnswers.size);\n      }\n\n      function giveAnswer() {\n        // display answer\n        let $displayNode = $('#suite_answer').find('#display-suite-answer');\n        if (wrongAnswers.size < 3) {  // tried at least 3 different times\n          $displayNode.val('You need to try an answer first!');\n          displaySuccess(false, false, true);\n          return false;\n        }\n        displaySuccess(false, true, false);\n        $displayNode.val(answer);\n        wrongAnswers = new Set();\n        // add css class to the element to show a failure\n      }\n\n\n\n      // on clicks\n    $check.click(checkAnswer);\n    $answer.click(giveAnswer);\n    let i = addExtraLoad();\n    $addLoad.click(i);\n  }()); // end of SUITE namespace.\n});","$(document).ready(() => {\n  let OWNERS = (() => {\n  /**\n* initialize main variables\n* demands is an object to store the values after running through the CEC Rules\n* entries is an object to store the input value from the user\n* wrong_anwers is an Set, when size equal 3 then the user can get the answer\n* answer is well the answer!!\n*/\n    let demands = {},\n      entries = {},\n      $ownerForm = $('#owner-form'),\n      wrongAnswers = new Set(),\n      answer,\n      // get buttons\n      $check = $('#owner-check'),\n      $answer = $('#owner-answer'),\n      $congrats = $('#congrats2');\n\n/**\n * CEC Rule 8-202(4)\n * Can also be use to calculate the other load demands since they are taken at\n * 100%\n * @param  {string} demand amount for miscellaneous loads\n * @return {number}        total demand\n */\n    function calMisc(demand) {\n      return parseInt(demand, 10);\n    }\n\n/**\n * Will determine the load demand for the parking stalls base off CEC Rule\n * 8-400(3)(4) When restricted is selected then follow (4), unrestricted uses\n * rule (3)\n * @param  {string} amount how many parking stalls there are\n * @param  {string} the kind of parking stalls either restricted or unrestricted\n * @return {number} demand for the parking stalls in Watts\n */\n    function calParking (amount, type) {\n      let total = 0,\n        x;\n      amount = parseInt(amount, 10);\n      if (type === 'unrestricted') {\n        if (amount > 60) {\n          // get amount over 60\n          x = amount - 60;\n          // find demand for stalls overs 60\n          total += x * 800;\n          // update amount\n          amount -= x;\n        }\n        if (amount > 30) {\n          x = amount - 30;\n          total += x * 1000;\n          amount -= x;\n        }\n        total += amount * 1200;\n        return total;\n      }\n      if (type === 'restricted') {\n        if (amount > 60) {\n          x = amount - 60;\n          total += x * 450;\n          amount -= x;\n        }\n        if (amount > 30) {\n          x = amount - 30;\n          total += x * 550;\n          amount -= x;\n        }\n        total += amount * 650;\n        return total;\n      }\n      console.log('Something wrong with the parking calculation');\n    }\n\n/**\n * CEC Rule 62-116(4)(b) say any other heating shall be taken at 75%\n * @param  {string} demand the demand from the user in watts\n * @return {number}        total demand for heating\n */\n    function calHeat (demand) {\n      return parseInt(demand, 10) * 0.75;\n    }\n\n/**\n * takes in an object and will sum the values of the keys in that object.\n * Object.keys return an array then I reduce that array by adding the values to\n * an initial 0 value passed into reduce.\n * @param  {object} object the object which all the values will be summed\n * @return {number}        the total demands from the object\n */\n    function sumDemands (object) {\n      return Object.keys(object).reduce((total, key) => {\n        return total + parseFloat(object[key]);\n      }, 0);\n    }\n\n    function calMinWireAmpacity (wattage, voltage, phase, install) {\n      wattage = parseInt(wattage, 10);\n      voltage = parseInt(voltage, 10);\n      phase = parseInt(phase, 10);\n      let tmp = (phase === 1) ? (wattage / voltage).toFixed(2) : (wattage /\n        (Math.sqrt(3) * voltage)).toFixed(2);\n      return install === 'freeair' ? +(tmp / 0.7).toFixed(2) :\n        +(tmp / 0.8).toFixed(2);\n    }\n\n\n    function calculator () {\n      let total = 0;\n      entries.misc = $ownerForm.find('#mis-loads').val();\n      entries.parking = $ownerForm.find('#parking-demand').val();\n      // will be restricted or unrestricted\n      entries.parkingType = $ownerForm.find('#parking-wrapper')\n        .find('input[name=parking]:checked').val();\n      entries.heat = $ownerForm.find('#owner-heat').val();\n      entries.other = $ownerForm.find('#other-loads').val();\n      entries.voltage = $ownerForm.find('#owner-voltage').val();\n      entries.phase = $ownerForm.find('#owner-phase').val();\n      entries.install = $('#install-wrapper')\n        .find('input[name=install]:checked').val();\n      entries.userAnswer = $('#owner-user-answer').val();\n      console.log(entries);\n\n      demands.misc = calMisc(entries.misc);\n      demands.parking = calParking(entries.parking, entries.parkingType);\n      demands.heat = calHeat(entries.heat);\n      demands.other = calMisc(entries.other);\n      total = sumDemands(demands);\n      console.log('total ' +calMinWireAmpacity(total, entries.voltage, entries.phase, entries.install));\n      return calMinWireAmpacity(total, entries.voltage, entries.phase,\n          entries.install);\n    }\n\n    function displaySuccess (success, fail, again, gaveup) {\n      if (success) {\n        $congrats.removeClass('alert-danger');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-success');\n        $congrats.html('<strong>Success</strong>');\n      }\n      if (fail) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-danger');\n        $congrats.html('<strong>Better luck next time!</strong>');\n      }\n      if (again) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-danger');\n        $congrats.addClass('alert alert-info');\n        $congrats.html('<strong>Just keep trying!</strong>');\n      }\n    }\n\n    function checkAnswer () {\n      answer = calculator();\n      let attempt = parseInt(entries.userAnswer, 10);\n      if (parseInt(answer, 10) === attempt) {\n        displaySuccess(true, false, false);\n        wrongAnswers = new Set();\n        return true;\n      }\n      displaySuccess(false, true, false);\n      wrongAnswers.add(attempt);\n      console.log(wrongAnswers);\n      console.log(wrongAnswers.size);\n\n      console.log('Test');\n    }\n\n    function giveAnswer () {\n      // display answer\n        let $displayNode = $('#owner-button-form').find('#display-owner-answer');\n        if (wrongAnswers.size < 3) {  // tried at least 3 different times\n          $displayNode.val('You need to try a few answers first!');\n          displaySuccess(false, false, true);\n          return false;\n        }\n        displaySuccess(false, true, false);\n        $displayNode.val(answer);\n        wrongAnswers = new Set();\n        // add css class to the element to show a failure\n      }\n\n    // on clicks\n    $check.click(checkAnswer);\n    $answer.click(giveAnswer);\n  }());\n});","\nArray.prototype.concatAll = function () {\n    var results = [];\n    this.forEach((innerArray) => {\n      results.push.apply(results, innerArray);\n    });\n    return results;\n  };\n\n$(document).ready(() => {\n  let TOTAL = (() => {\n    let entries = {},\n      demands = {},\n      wrongAnswers = new Set(),\n      answer,\n      $congrats = $('#congrats3');\n\n\n\n\n    function addNewUnit () {\n      let ex = 3;\n      return function () {\n        ex++;\n        $('#total-form').find('.unit-info').last().closest('.row')\n          .after(`<div class=\"row\"><div class=\"form-group unit-info\"><label ` +\n          `for=\"unit-demand-${ex}\" class=\"col-sm-12 col-md-2\">` +\n          `Unit ${ex} Subtotal Demand</label>` +\n          `<div class=\"col-sm-12 col-md-2\"><input type=\"text\" ` +\n          `class=\"form-control\" ` +\n          `id=\"unit-demand-${ex}\" placeholder=\"10000\" name=\"demand\"></div>` +\n          `<label for=\"unit-count-${ex}\" class=\"col-sm-12 col-md-2\">` +\n          `Unit ${ex} Count</label>` +\n          `<div class=\"col-sm-12 col-md-2\"><input type=\"text\" ` +\n          `class=\"form-control\" ` +\n          `id=\"unit-count-${ex}\" placeholder=\"2\" name=\"count\"></div>` +\n          `<label for=\"unit-heat-${ex}\" class=\"col-sm-12 col-md-2\">` +\n          `Unit ${ex} Heat Demand (W)` +\n          `</label><div class=\"col-sm-12 col-md-2\"><input type=\"text\" ` +\n          `class=\"form-control\" id=\"unit-heat-${ex}\" placeholder=\"8000\" ` +\n          `name=\"heat\"></div></div></div>`);\n      };\n    }\n\n\n/**\n * tmp is an array of array that looks like [[12000,3],[15000,2],[10000,1]]\n * first value is the demand of the unit and the second is how many\n * will sort base off the first value then map to produce an array of just\n * demands in order for how many of each on.\n * map over the array of arrays to make array of arrays this time each inner\n * array has an element of the demand for how many unit there were(second value)\n * afterward use concatAll() to flatten the array.\n * highest demand first!!!\n * reduce to sum the values based off the CEC Rule 8-202(3)(a)\n * first unit 100%, 2 & 3 at 65%, 4 & 5 at 40%, 6 - 20 at 25%, rest at 10%\n * @return {array} demands for all the units in order.\n */\n    function calUnitDemands () {\n      let tmp = [],\n        $x = $('#total-form');\n      $x.find('.unit-info').each(function () {\n        tmp.push([parseInt($(this).find('input[name=\"demand\"]').val(), 10),\n          parseInt($(this).find('input[name=\"count\"]').val(), 10)]);\n      });\n      // Main return\n      return tmp.sort((a, b) => {\n        if (a[0] === b[0]) { return 0; }\n        return b[0] - a[0];\n      }).map((unitArray) => {\n        let ans = [];\n        for (let i = 0; i < unitArray[1]; i++) {\n          ans.push(unitArray[0]);\n        }\n        return ans;\n      }).concatAll().reduce((final, dem, index) => {\n        if (index === 0) { return final + dem; }\n        if (index === 1 || index === 2) { return final + dem * 0.65; }\n        if (index === 3 || index === 4) { return final + dem * 0.40; }\n        if (index > 4 && index <= 19) { return final + dem * 0.25; }\n        return final + dem * 0.10;\n      }, 0);\n    }\n\n    function calUnitHeat () {\n      let tmp = [],\n        totalDemand,\n        $x = $('#total-form');\n      $x.find('.unit-info').each(function () {\n        tmp.push([parseInt($(this).find('input[name=\"heat\"]').val(), 10),\n          parseInt($(this).find('input[name=\"count\"]').val(), 10)]);\n      });\n      totalDemand = tmp.map((unitArray) => {\n        let ans = [];\n        for (let i = 0; i < unitArray[1]; i++) {\n          ans.push(unitArray[0]);\n        }\n        return ans;\n      }).concatAll().reduce((ans, curr) => {\n        return ans + curr;\n      }, 0);\n\n      return totalDemand !== 0 ? ((totalDemand - 10000) * 0.75) + 10000 : 0;\n    }\n\n\n    function calculator () {\n      demands.units = calUnitDemands();\n      demands.heat = calUnitHeat();\n      entries.userAnswer = $('#total-form').find('#total-user-answer').val();\n      console.log('demands.units ' + demands.units);\n      console.log('demands.heat ' + demands.heat);\n\n      return demands.heat + demands.units;\n    }\n\n    function displaySuccess (success, fail, again, gaveup) {\n      if (success) {\n        $congrats.removeClass('alert-danger');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-success');\n        $congrats.html('<strong>Success</strong>');\n      }\n      if (fail) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-info');\n        $congrats.addClass('alert alert-danger');\n        $congrats.html('<strong>Better luck next time!</strong>');\n      }\n      if (again) {\n        $congrats.removeClass('alert-success');\n        $congrats.removeClass('alert-danger');\n        $congrats.addClass('alert alert-info');\n        $congrats.html('<strong>Just keep trying!</strong>');\n      }\n    }\n\n    function checkAnswer () {\n      answer = calculator();\n      console.log('answer ' + answer);\n      let attempt = parseInt(entries.userAnswer, 10);\n      console.log('entries.userAnswer '+entries.userAnswer);\n      // check for right answer then do css magic!!\n      if (parseInt(answer, 10) === attempt) {\n        displaySuccess(true, false, false);\n        wrongAnswers = new Set();\n        return true;\n      }\n      displaySuccess(false, true, false);\n      console.log(attempt);\n      wrongAnswers.add(attempt);\n      console.log(wrongAnswers);\n    }\n\n\n    function giveAnswer() {\n      // display answer\n      let $displayNode = $('#total-form').find('#display-total-answer');\n      if (wrongAnswers.size < 3) {  // tried at least 3 different times\n        $displayNode.val('You need to try an answer first!');\n        displaySuccess(false, false, true);\n        return false;\n      }\n      displaySuccess(false, true, false);\n      $displayNode.val(answer);\n      wrongAnswers = new Set();\n      // add css class to the element to show a failure\n    }\n\n\n    $('#total-check').click(checkAnswer);\n    $('#total-answer-btn').click(giveAnswer);\n    let addUnit = addNewUnit();\n    $('#add-unit').click(addUnit);\n  }());\n});"]}